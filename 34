class Solution {
public:
        vector<int> final;
    
    void search(vector<int>& input, int target, int low, int high){

        if(high < low)
            return;
        
        int mid = (low+high)/2;
        
        if(input[mid]==target)
        {
            final.push_back(mid);
        }
        search(input,target,low,mid-1);
        search(input,target,mid+1,high);
        
    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        
        vector<int> result;
        
        
        int mid = (nums.size()-1)/2;
        if(mid<0)
        {
            result.push_back(-1);
            result.push_back(-1);
            return result;
        }
        
        search(nums, target,0,nums.size()-1);
        
        if(final.size()==0)
        {
            result.push_back(-1);
            result.push_back(-1);
        }else
        {
            sort(final.begin(),final.end());
        
        
            result.push_back(final[0]);
            result.push_back(final[final.size()-1]);
        }
        
        return result;
        
    }
};
