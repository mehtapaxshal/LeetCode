/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        
        queue<TreeNode*> q1;
        vector<int> result;
        
        if(root == NULL)
            return result;
        
        q1.push(root);
        q1.push(NULL);
        
        int max=INT_MIN,value=0;
        while(!q1.empty())
        {
            TreeNode* temp = q1.front();
            q1.pop();
            
            if(temp==NULL)
            {
                if(!q1.empty())
                {
                    q1.push(NULL);
                    result.push_back(max);
                    max=INT_MIN;
                    continue;
                }else
                {
                    result.push_back(max);
                    break;
                }
                
            }
            value=temp->val;
            if(max<value)
                max=value;
            
            if(temp->left)
                q1.push(temp->left);
            if(temp->right)
                q1.push(temp->right);
        }
        
     return result;   
    }
};
