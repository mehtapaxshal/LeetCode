/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        int sum=0,carry=0;
        ListNode* result, *temp, *head;
        temp = NULL;
        while(l1!=NULL && l2!=NULL)
        {
            
            sum=l1->val + l2->val + carry;
            carry=0;
            if(sum>9)
            {
                sum=sum%10;
                carry=1;
            }
            
            result = new ListNode(sum);
            l1=l1->next;
            l2=l2->next;
            if(temp==NULL)
            {
                temp=result;
                head=result;
                continue;
            }
            temp->next=result;
            temp = result;
            
        }
        
        if(l1!=NULL && l2==NULL)
        {
            while(l1!=NULL)
            {
                sum=l1->val+carry;
                carry=0;
                if(sum>9)
                {
                    sum=sum%10;
                    carry=1;
                }
                result = new ListNode(sum);
                temp->next=result;
                temp = result;
                l1=l1->next;
            }
        }else if(l1==NULL && l2!=NULL)
        {
            while(l2!=NULL)
            {
                sum=l2->val+carry;
                carry=0;
                if(sum>9)
                {
                    sum=sum%10;
                    carry=1;
                }
                result = new ListNode(sum);
                temp->next=result;
                temp = result;
                l2=l2->next;
            }
        }
        
        if(carry == 1)
        {
            result = new ListNode(carry);
            temp->next=result;
            temp = result;
        
            
        }
        
        
        return head;
        
        
    }
};
